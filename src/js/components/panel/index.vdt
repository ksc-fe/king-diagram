import {Collapse, CollapseItem} from 'kpc/components/collapse';
import Checkbox from 'kpc/components/checkbox';
import {Select, Option} from 'kpc/components/select';
import Radio from 'kpc/components/radio';
import Icon from 'kpc/components/icon';
import Button from 'kpc/components/button';
import KdIcon from '../icon';
import Spinner from 'kpc/components/spinner';
import Colorpicker from 'kpc/components/colorpicker';
import mx from '../../mxgraph';

const {mxConstants} = mx;
const {show, state, isEditing} = self.get();
const textAlign = self.get('state.style.align');
const verticalAlign = self.get('state.style.verticalAlign');
const strokeColor = self._getStrokeColor();
const fontStyle = self.get('state.style.fontStyle', 0);
const fillColor = self.get('state.style.fillColor');

const showStroke = strokeColor !== undefined && strokeColor !== 'none';
const showFill = !!self.get('state.fill') && fillColor !== 'none';
const strokeStyle = self._getStrokeStyle();

<div class={{ {'kd-panel': true, 'hide': !show} }}>
    <div class="collapse-wrapper">
        <Collapse noBorder v-model="expandedKeys">
            <CollapseItem title="样式" disabled={{ !state || isEditing }} value="style">
                <div class="item" v-if={{ 
                    !self.get('state.containsLabel') &&
                    (!self.get('state.containsImage') || self.get('state.style.shape') === 'image') 
                }}>
                    <Checkbox value={{ showFill }}
                        ev-$change:value={{ self._toggleColor.bind(self, 'fillColor', '#ffffff', showFill) }}
                    >填充</Checkbox>
                    <Colorpicker value={{ fillColor || '#ffffff' }} size="small" 
                        ev-$change:value={{ self._setFillOrStrokeColor.bind(self, 'fillColor') }}
                        ref="fillColor"
                        disabled={{ !showFill }}
                    />
                </div>
                <div class="item">
                    <div class="c-clearfix">
                        <Checkbox value={{ showStroke }}
                            ev-$change:value={{ self._toggleColor.bind(self, 'strokeColor', '#000000', showStroke) }}
                        >线</Checkbox>
                        <Colorpicker value={{ strokeColor || '#000000' }} size="small" 
                            ev-$change:value={{ self._setFillOrStrokeColor.bind(self, 'strokeColor') }}
                            ref="strokeColor"
                            disabled={{ !showStroke }}
                        />
                    </div>
                    <div class="c-clearfix extra-item">
                        <Select size="small" width="120" value={{ strokeStyle }}
                            ev-$change:value={{ self._setStrokeStyle.bind(self, strokeStyle) }}
                            disabled={{ !showStroke }}
                        >
                            <Option v-for={{ ['solid', 'dashed', 'dotted'] }}
                                value={{ value }}
                                label={{ value }}
                            >
                                <div class="line-style" style={{ {borderBottom: `1px ${value} #000`} }}></div>
                            </Option>
                            <b:value params="value">
                                <div style={{ {borderBottom: `1px ${value} #666`} }} class="line"></div>
                            </b:value>
                        </Select>
                        <Spinner vertical size="small" 
                            value={{ self.get('state.style.strokeWidth', 1) }}
                            min={{ 1 }}
                            suffix="pt"
                            ev-$change:value={{ self._setStyle.bind(self, 'strokeWidth') }}
                            disabled={{ !showStroke }}
                        />
                    </div>
                </div>
                <div class="item">
                    <Checkbox value={{ self.get('state.style.rounded') === 1 }}
                        ev-$change:value={{ self._setRounded }}
                    >圆角</Checkbox>
                </div>
            </CollapseItem>
            <CollapseItem title="文本" disabled={{ !state }} value="text">
                <Select fluid size="small" value={{ self.get('state.style.fontFamily') }}
                    ev-$change:value={{ self._setFontFamily }}
                    ev-mousedown={{ self._preventDefault }}
                    ref="fontFamily"
                >
                    <Option value="Helvetica">Helvetica</Option>
                    <Option value="Microsoft Yahei">Microsoft Yahei</Option>
                    <Option value="Monospace">Monospace</Option>
                </Select>
                <div class="row">
                    <Button type="none" icon
                        v-for={{ ['BOLD', 'ITALIC', 'UNDERLINE'] }}
                        class={{ {active: (fontStyle & mxConstants[`FONT_${value}`]) === mxConstants[`FONT_${value}`]} }}
                        ev-click={{ self._toggleFontStyle.bind(self, value) }}
                    >
                        <KdIcon class={{ value.toLowerCase() }} size={{ value === 'UNDERLINE' ? 14 : 30 }} />
                    </Button>
                    <div class="font-size">
                        大小
                        <Spinner vertical size="small"
                            value={{ self.get('state.style.fontSize', 12) }}
                            min={{ 1 }}
                            suffix="pt"
                            ev-change={{ self._setFontSize }}
                            ref="fontSize"
                        />
                    </div>
                </div>
                <div class="row">
                    <Button type="none" icon 
                        v-for={{ ['left', 'center', 'right'] }}
                        class={{ {active: textAlign === value} }}
                        ev-click={{ self._setAlign.bind(self, 'align', value) }}
                    >
                        <KdIcon class={{ `text-${value}` }} size="30" />
                    </Button>
                    <Button type="none" icon 
                        v-for={{ ['top', 'middle', 'bottom'] }}
                        class={{ {active: verticalAlign === value} }}
                        ev-click={{ self._setAlign.bind(self, 'verticalAlign', value) }}
                    >
                        <KdIcon class={{ `text-${value}` }} size={{ value === 'middle' ? 16 : 30 }} />
                    </Button>
                </div>
                <div class="row whole">
                    <div class="label">字体颜色</div>
                    <Colorpicker value={{ self.get('state.style.fontColor', '#000000') }} size="small" 
                        ev-$change:value={{ self._setFontColor }}
                        ev-mousedown={{ self._preventDefault }}
                        ref="fontColor"
                    />
                </div>
            </CollapseItem>
            <CollapseItem title="布局" disabled={{ !state || isEditing }} value="layout">
                <Radio v-model="layout" trueValue="circle">圆形</Radio><br />
                <Radio v-model="layout" trueValue="tree">树形</Radio><br />
                <Radio v-model="layout" trueValue="ray">放射</Radio><br />
                <Radio v-model="layout" trueValue="vertical">垂直</Radio><br />
                <Radio v-model="layout" trueValue="horizontal">水平</Radio><br />
            </CollapseItem>
        </Collapse>
    </div>
    <div class="expand-shrink" ev-click={{ self._toggle }}>
        <Icon class="ion-android-arrow-dropright" />
    </div>
</div>
